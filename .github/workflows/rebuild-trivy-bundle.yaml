
name: update-bundle-images

on:

  workflow_dispatch:

  push:

  schedule:
    # at 6 a.m. every Wednesday
    - cron: "0 6 * * 3"

env:
  TAGS_TO_FETCH: 2
  TRIVY_IMAGE_NAME: mesosphere/trivy-bundles

  OBTAIN_TRIVY_IMAGE_TAGS_ACTIVATED: true
  REBUILD_TRIVY_BUNDLE_IMAGES_ACTIVATED: false


jobs:
  # TODO: add condition to make the job run every OTHER week
  obtain-trivy-image-tags:

    runs-on: ubuntu-latest

    env:
      # leave blank if you don't want to rebuild trivy-bundles image for the main branch
      dkp_insights_main_branch_name: "origin/main"

    steps:
      - name: Clone dkp-insights Repository
        uses: actions/checkout@v3
        with:
          repository: mesosphere/dkp-insights
          ref: main
          submodules: 'false'
          token: ${{ secrets.MERGEBOT_TOKEN }}

      - name: Create Artifact TXT File
        run: mkdir -p artifacts && touch ./artifacts/tags-to-rebuild.txt

      - name: Fetch All Branches From dkp-insights Repository
        run: git fetch --all

      - name: Obtain Trivy Image Names From Each dkp-insights Release Tag
        run: |
          dkp_insights_release_branches=($(git branch -r | grep 'origin/release' | tail -n $TAGS_TO_FETCH))

          if [[ ! -z "dkp_insights_main_branch_name" ]]; then
            dkp_insights_release_branches+=($dkp_insights_main_branch_name)
          fi

          echo "dkp_insights_release_branches: ${dkp_insights_release_branches[@]}"

          for branch in "${dkp_insights_release_branches[@]}"
          do
            git checkout ${branch}

            trivy_image_tag=$(cat ./charts/dkp-insights/values.yaml | grep -o 'mesosphere/trivy-bundles:.*' | cut -f2- -d: || :)

            echo $trivy_image_tag

            if [[ ! -z "$trivy_image_tag" ]]; then
              echo "${branch}=${trivy_image_tag}" >> ./artifacts/tags-to-rebuild.txt
            fi

          done

      - name: Upload Artifact With Trivy Image Names
        uses: actions/upload-artifact@v3
        with:
          name: trivy-tags-to-rebuild
          path: ./artifacts/tags-to-rebuild.txt


  rebuild-trivy-bundle-images:
    needs: [obtain-trivy-image-tags]

    runs-on: ubuntu-latest
    steps:
      - name: Clone trivy-bundles Repository
        uses: actions/checkout@v3
        with:
          repository: mesosphere/trivy-bundles
          ref: main
      
      - name: Download Artifact w/Trivy Image Names
        uses: actions/download-artifact@v3
        with:
          name: trivy-tags-to-rebuild

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_READ_WRITE_USERNAME }}
          password: ${{ secrets.DOCKER_READ_WRITE_PASSWORD }}

      - name: Rebuild and Push Trivy Bundle Images
          
        if: env.REBUILD_TRIVY_BUNDLE_IMAGES_ACTIVATED == 'true'

        run: |
          while read tag; do
            trivy_image_version=${tag%-*}
            time_stamp=${tag##*-}

            TRIVY_IMAGE_TAG=$trivy_image_version \
              TIMESTAMP=$time_stamp \
              OUTPUT_IMAGE=$TRIVY_IMAGE_NAME \
              make publish-trivy-bundled-image

          done <tags-to-rebuild.txt
